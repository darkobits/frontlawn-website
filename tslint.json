{
	"extends": "tslint-xo/space",
	"rules": {
		"align": false,

		// Requires using 'Array<T>' style for arrays.
		"array-type": [true, "generic"],

		// Do not enforce formatting rules for single-line comments.
		"comment-format": false,

		// Recommends using an early exit instead of a long if block. This means to
		// return early from a function, continue early in loop, or break early in a
		// switch case.
		"early-exit": false,

		"member-ordering": false,

		// Allow multiple consecutive blank lines.
		"no-consecutive-blank-lines": false,

		// Allow importing modules that are not listed as a dependency in the
		// projectâ€™s package.json. This is disabled because it doesn't work with
		// custom module resolution rules.
		"no-implicit-dependencies": false,

		// Allow imports with side-effects. This is necessary for things like Babel
		// polyfill and global styles.
		"no-import-side-effect": false,

		"no-unsafe-any": false,

		// Disallows unused imports, variables, functions, classes, type parameters,
		// and more.
		"no-unused": [true, "unused-catch-binding"],

		"no-void-expression": false,

		"object-literal-key-quotes": false,

    // Require single quotemarks in code, double quotemarks in JSX.
		"quotemark": [true, "single", "jsx-double"],

		// Prevent errors related to this-bindings in React, but allow anonymous
		// callbacks as event listeners.
		"react-this-binding-issue": [true, {"allow-anonymous-listeners": true}],

		// This rule requries explicit typedefs, even when TypeScript can trivially
		// infer them, so disable it.
		"typedef": false,

		// Allow variable names in lowerCamelCase, PascalCase, and UPPER_CASE.
		// Additionally, ban the use of reserved TypeScript keywords.
		"variable-name": [true, "ban-keywords", "check-format", "allow-pascal-case", "allow-leading-underscore"]
	}
}
